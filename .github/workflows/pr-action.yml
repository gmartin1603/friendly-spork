#################################################################################
# Name: OTM-Develop-PR-Action
# Author: George Martin
# Date: 2024-01-20
# Notes:
#  This workflow is triggered when a pull request is opened or updated.
# Environment Variables:
#  secrets.ENV_CONTENTS: The contents of the .env file
#  secrets.CYPRESS_ENV: The contents of the cypress.env.json file
#  secrets.FIREBASE_CONFIG: The contents of the firebaseConfig.json file
#  secrets.FIREBASE_ADMIN_CONFIG: The contents of the firebase_admin.json file
################################################################################

name: MVP-Develop-PR-Action
on:
  pull_request:
    branches: [ "develop" ]
  workflow_dispatch:
jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install Node
      uses: actions/setup-node@v3
      with:
        node-version: '21'

    - name: Setup .env file
      run: echo "${{ secrets.ENV_CONTENTS }}" > .env

    - name: Setup cypress.env.json
      run: echo '${{ secrets.CYPRESS_ENV }}' > cypress.env.json

    # Validate cypress.env.json
    - name: Validate cypress.env.json
      run: |
        cat cypress.env.json
        jq empty cypress.env.json

    - name: Create private directory
      run: mkdir -p ./src/private

    - name: Create Firestore Config File
      run: |
        echo "export const firebaseConfig = {};" > ./src/private/firestore.js
        echo "export const firebaseConfig2 = '${FIREBASE_CONFIG_JSON}';" >> ./src/private/firestore.js
      env:
        FIREBASE_CONFIG_JSON: ${{ secrets.FIREBASE_CONFIG }}

    - name: Setup Firebase Admin Config
      run: |
        echo '${{ secrets.FIREBASE_ADMIN_CONFIG }}' > ./src/private/firebase_admin.json

    - name: Install Dependencies
      run: npm install --legacy-peer-deps

    - name: Build
      run: npm run build

    - name: Install http-server
      run: npm install -g http-server

    - name: Serve and Test
      run: |
        http-server build -p 3000 & 
        sleep 10
        npm run test admin 

    - name: Upload test results
      uses: actions/upload-artifact@v2
      with:
        name: test-results
        path: cypress/report/result_index.json

  analyze-results:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: '21'

      - name: Install Dependencies
        run: npm install --legacy-peer-deps

      - name: Download test results
        uses: actions/download-artifact@v2
        with:
          name: test-results
          path: cypress/report

      - name: Analyze Test Results
        id: analyze_results
        run: |
          node ./scripts/analyze-test-results.js

      - name: Set job outcome
        if: steps.analyze_results.outputs.failed_tests != '0'
        run: exit 1

      - name: Update PR status
        if: steps.analyze_results.outputs.failed_tests != '0'
        uses: actions/github-script@v5
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const { issue: { number: issue_number } } = context.payload.pull_request
            github.issues.createComment({
              issue_number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Cypress tests have failed. Please review the test results.'
            })
